name: Check Bidder Info Yaml Files

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check_yaml_files:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Check for changes in static/bidder-info/*.yaml files
        id: check_changes
        run: |
          changed_files=$(git diff --name-only HEAD^ HEAD | grep -E '^static/bidder-info/.*\.yaml$' || true)
          echo "::set-output name=changed_files::$changed_files"

      - name: Check userSync.redirect.url in updated/added YAML files
        if: steps.check_changes.outputs.changed_files != ''
        run: |
          echo "Changed files: ${{ steps.check_changes.outputs.changed_files }}"
          for file in ${{ steps.check_changes.outputs.changed_files }}; do
            echo "$(git diff --name-only --diff-filter=A HEAD^ HEAD)"
            if [ -f "$file" ]; then
              if git diff --name-only --diff-filter=A HEAD^ HEAD | grep -q "^$file$"; then
                echo "File $file was added in this PR"
                redirectURL="$(yq eval '.userSync.redirect.url' "$file")"
                length=$(echo -n "$redirectURL" | wc -c)
                echo "Length of redirectURL string: $length"
                if [ -z "$redirectURL" ]; then
                  echo "userSync.redirect.url not found in $file"
                else
                  echo "userSync.redirect.url found in $file"
                fi
              else
                echo "File $file was updated in this PR"
                prChanges=$(yq eval '.userSync.redirect.url' "$file")
                echo "PR changes: $prChanges"
                masterChanges=$(yq eval '.userSync.redirect.url' <(git show origin/master:$file))
                echo "Master changes: $masterChanges"
                if [ "$prChanges" != "$masterChanges" ]; then
                  echo "userSync.redirect.url was updated in $file"
                else
                  echo "userSync.redirect.url was not updated in $file"
                fi
              fi
            else
              echo "File $file does not exist"
            fi
          done
